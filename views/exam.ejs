<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title><%= exam.title %></title>
    <!-- <link rel="stylesheet" href="../../../assets/css/style.css" /> -->

    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&display=swap"
      rel="stylesheet"
    />
    <link rel="stylesheet" href="../../../assets/css/tailwind.output.css" />
    <script
      src="https://cdn.jsdelivr.net/gh/alpinejs/alpine@v2.x.x/dist/alpine.min.js"
      defer
    ></script>
    
    <script src="../../../assets/js/init-alpine.js"></script>


    <link rel="stylesheet"  href="https://unpkg.com/flowbite@1.3.4/dist/flowbite.min.css"/>
    <script src="https://unpkg.com/flowbite@1.4.5/dist/flowbite.js"></script>
    
    <script src="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs"></script>
    <script src="https://cdn.jsdelivr.net/npm/@tensorflow-models/blazeface"></script>
  </head>
  <body>
    <form method="post" action="/exam/<%= exam._id%>/evaluation">
    <div class="p-4 grid grid-cols-4 gap-2">
       
        <div class="flex  flex-col">

      <div>
        <video id="video" width="320" height="760" autoplay muted></video>
      </div>  
        <div  class=" mt-4 flex-wrap p-4 px-4 py-3 mb-8 bg-white rounded-lg shadow-md dark:bg-gray-800">
          <div  class=" flex-row">
          <p class="text-center text-2xl mb-4">Question Navigation</p>
          <% for(let i=1; i<= exam.questions.length ; i++){ %>   
          <a href="#<%= i %>">
                  <button type="button" class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 mr-2 mb-2 dark:bg-blue-600 dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800"><%= i %></button>
              </a>

              
            <% } %>  
          </div>
          <button type="submit" onsubmit="clear()" class="text-white bg-gradient-to-r from-green-400 via-green-500 to-green-600 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-green-300 dark:focus:ring-green-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2">Submit</button>
        </div>
    </div>

      <div class=" col-span-2 flex-col" style="overflow-y: auto; height: 100vh;">
        <% let num = 1;
           for (question of exam.questions) { %> 
        <div
          class="p-4 px-4 py-3 mb-8 bg-white rounded-lg shadow-md dark:bg-gray-800" >
          <h2
            class="my-6 w-full text-2xl font-semibold text-gray-700 dark:text-gray-200"
          >
           <a id="<%= num %>"><%= num %></a> <%= question.title %>
          </h2>
          <fieldset>
            <%  let opnum = 1; 
              for(option of question.options){ %>
                <div class="flex items-center mb-4">
                  <input id="country-option-1" type="radio" name="exam[question_<%= num %>][answer]" value="<%= opnum %>" class="w-4 h-4 border-gray-300 focus:ring-2 focus:ring-blue-300 dark:focus:ring-blue-600 dark:focus:bg-blue-600 dark:bg-gray-700 dark:border-gray-600" >
                  <label for="country-option-1" class="block ml-2 text-sm font-medium text-gray-900 dark:text-gray-300">
                    <%= option %>
                  </label>
                </div>
            <% opnum++; } %> 
          </fieldset>
        </div>
        <% num++; } %> 
       </div>
        

      <div>
        <div  class="p-4 px-4 py-3 mb-8 bg-blue-300 rounded-lg shadow-md dark:bg-gray-800" > 

            <h1 id="timer" class="text-5xl text-center"></h1>
        
        </div>
          
        </div> 
    </div>
    
    </div>
    <input type="hidden" name="email" value="<%= response.email  %>"/>
    <input type="hidden" name="name" value="<%= response.name %>"/>
  </form>
       
<div id="multi-face-modal" tabindex="-1" class="hidden overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 md:inset-0 h-modal md:h-full">
  <div class="relative p-4 w-full max-w-md h-full md:h-auto">
      <div class="relative bg-white rounded-lg shadow dark:bg-gray-700">
          <div class="p-6 text-center">
              <svg class="mx-auto mb-4 w-14 h-14 text-gray-400 dark:text-gray-200" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>
              <h3 class="mb-5 text-lg font-normal text-gray-500 dark:text-gray-400">Multiple Faces detected , It will lead to terminating exam</h3>
              <button onclick="multiplefacesmodal.hide()" type="button" class="text-white bg-red-600 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 dark:focus:ring-red-800 font-medium rounded-lg text-sm inline-flex items-center px-5 py-2.5 text-center mr-2">
                  I Acknowledge
              </button>
             
          </div>
      </div>
  </div>
</div>

<div id="no-face-modal" tabindex="-1" class="hidden overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 md:inset-0 h-modal md:h-full">
  <div class="relative p-4 w-full max-w-md h-full md:h-auto">
      <div class="relative bg-white rounded-lg shadow dark:bg-gray-700">
          <div class="p-6 text-center">
              <svg class="mx-auto mb-4 w-14 h-14 text-gray-400 dark:text-gray-200" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>
              <h3 class="mb-5 text-lg font-normal text-gray-500 dark:text-gray-400">No Faces Detected, sit center of camera or move to place with good Lighting  </h3>
              <button onclick="nofacemodal.hide();" type="button" class="text-white bg-red-600 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 dark:focus:ring-red-800 font-medium rounded-lg text-sm inline-flex items-center px-5 py-2.5 text-center mr-2">
                  I Acknowledge
              </button>
              
          </div>
      </div>
  </div>
</div>

<div id="keyboard-modal" tabindex="-1" class="hidden overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 md:inset-0 h-modal md:h-full">
  <div class="relative p-4 w-full max-w-md h-full md:h-auto">
      <div class="relative bg-white rounded-lg shadow dark:bg-gray-700">
          <div class="p-6 text-center">
              <svg class="mx-auto mb-4 w-14 h-14 text-gray-400 dark:text-gray-200" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>
              <h3 class="mb-5 text-lg font-normal text-gray-500 dark:text-gray-400">Malicious Activity Detected, This will lead to terminating Exam </h3>
              <button data-modal-toggle="popup-modal" type="button" class="text-white bg-red-600 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 dark:focus:ring-red-800 font-medium rounded-lg text-sm inline-flex items-center px-5 py-2.5 text-center mr-2">
                  I Acknowledge
              </button>
          </div>
      </div>
  </div>
</div>


<div id="fullscreen-modal" tabindex="-1" class="hidden overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 md:inset-0 h-modal md:h-full">
  <div class="relative p-4 w-full max-w-md h-full md:h-auto">
      <div class="relative bg-white rounded-lg shadow dark:bg-gray-700">
          <div class="p-6 text-center">
              <svg class="mx-auto mb-4 w-14 h-14 text-gray-400 dark:text-gray-200" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>
              <h3 class="mb-5 text-lg font-normal text-gray-500 dark:text-gray-400">Exam is starting Wait for Sometime</h3>
              <button id="start_btn"  onclick="setFullscreen()" type="button" class="text-gray-500 bg-white hover:bg-gray-100 focus:ring-4 focus:outline-none focus:ring-gray-200 rounded-lg border border-gray-200 text-sm font-medium px-5 py-2.5 hover:text-gray-900 focus:z-10 dark:bg-gray-700 dark:text-gray-300 dark:border-gray-500 dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-gray-600">
                Start Exam</button>
          </div>
      </div>
  </div>
</div>






  <script defer>
      const video = document.getElementById('video')
var detectionInterval = false;
var timerInterval = false;
var interval = null;
let options = {
onHide: () => {
  detectionInterval = true;
  timerInterval = true;
},
onShow: () => {
    detectionInterval = false;
    timerInterval = false;
},
};

let noface = document.getElementById('no-face-modal');
let multiface = document.getElementById('multi-face-modal')
let fullscr = document.getElementById('fullscreen-modal');
const nofacemodal = new Modal(noface,options);
const multiplefacesmodal = new Modal(multiface,options);
const fullscreenmodal = new Modal(fullscr,options);


function startVideo() {
navigator.mediaDevices.getUserMedia({
  video : { facingMode: ( "user" || "environment"), width: 420, height: 255},
  audio:false,
}).then(stream =>{
   video.srcObject  = stream;
});
}

const detectFaces = async ()=>{
const prediction = await model.estimateFaces(video,false);

if(detectionInterval){
if(prediction.length < 1) nofacemodal.show();
if(prediction.length > 1) multiplefacesmodal.show();
}
}

startVideo();
video.addEventListener("loadeddata", async ()=>{
model =  await blazeface.load();
detectionInterval = true;
interval = setInterval(detectFaces,2000);
});



function msToTime(ms) {
let seconds = (ms / 1000).toFixed(1);
let minutes = (ms / (1000 * 60)).toFixed(1);
let hours = (ms / (1000 * 60 * 60)).toFixed(1);
let days = (ms / (1000 * 60 * 60 * 24)).toFixed(1);
if (seconds < 60) return seconds + " Sec";
else if (minutes < 60) return minutes + " Min";
else if (hours < 24) return hours + " Hrs";
else return days + " Days"
}

function getPermissions() {
          let errorCallback = (error) => {
            if (
              error.name == "NotAllowedError" ||
              error.name == "PermissionDismissedError"
            ) {
              return false;
            }
          };
          if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
            navigator.mediaDevices
              .getUserMedia({ video: true, audio: true })
              .then((success) => {
                
              }, errorCallback);
          }
        }



       
      var duration = '<%= exam.duration.date.getTime() %>';
    function Timer() {
        if(timerInterval){
      sec = 1000;
      min = 60 * sec;
      hour = 60 * min;

      Timehour = Math.floor(duration / hour);
      TimeMin = Math.floor((duration % hour) / min);
      TimeSec = Math.floor((duration % min) / sec);
      let clock = document.getElementById("timer");
      clock.innerText = `${Timehour}:${TimeMin}:${TimeSec}`;

      duration -= 1000;

        }
    }
     timerInterval = true;
   let timer =  setInterval(Timer, 1000);


   
   fullscreenmodal.show();
    
   function setFullscreen(){
   document.documentElement.requestFullscreen()
.then(function() {
   fullscreenmodal.hide();
})
.catch(function(error) {
  // element could not enter fullscreen mode
});
}

function clear(){

  clearInterval(timer);
  clearInterval(interval);

}
  </script>
  </body>
</html>
